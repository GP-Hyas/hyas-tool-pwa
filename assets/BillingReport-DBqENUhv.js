import{d as m,g as f,a as _,b as y,A as S,r as u,u as x,j as e,H as R,D as j,F as I,P as p}from"./index-C2YN3cRo.js";import{u as T,M as C}from"./Modal-GZDEMvWt.js";import{S as w,B as A}from"./Button-Zmk-4lHV.js";import{g as N}from"./reportService-C-zMg-IB.js";const U=async(t,s)=>{try{const r=_(t.client_id),i=(await y.post(S.analyticsTeams,r,{headers:s})).data;return typeof i.total_active_users>"u"?(console.warn(`Unexpected response format for ${t.organization_name}`),{activeUsers:0}):{activeUsers:i.total_active_users}}catch(r){return console.error(`Error fetching insight seats for ${t.organization_name}:`,r),{activeUsers:0}}},b=async()=>{try{const s=(await m.getOrganizationList()).filter(c=>c.products.includes("INSIGHT"));if(!Array.isArray(s)||s.length===0)return{success:!1,data:null,error:"No INSIGHT organizations available."};const r=await f(),n=await B(s,r),i=H(n),o=N(i,"insight_active_users");return{success:o.success,error:o.error}}catch(t){return console.error(`Error fetching INSIGHT active users: ${t}`),{success:!1,error:`Error fetching INSIGHT active users: ${t.message}`}}},B=async(t,s)=>await Promise.all(t.map(async n=>{const{activeUsers:i}=await U(n,s);return{org:n.organization_name,activeUsers:i}})),H=t=>{const s=[];s.push({MSSP:"INSIGHT","Client Org":"","Total Active Users":""}),t.forEach(n=>{s.push({MSSP:"","Client Org":n.org,"Total Active Users":n.activeUsers})});const r=t.reduce((n,i)=>n+i.activeUsers,0);return s.push({MSSP:"Totals","Client Org":"","Total Active Users":r}),s},P="_BillingReport_1wbx0_2",M="_billingReportIntro_1wbx0_8",G="_alignment_1wbx0_23",L="_reportTypeSelection_1wbx0_40",O="_continueBtnContainer_1wbx0_50",a={BillingReport:P,billingReportIntro:M,alignment:G,reportTypeSelection:L,continueBtnContainer:O};function $(){const[t,s]=u.useState(!1),[r,n]=u.useState("dns_volume"),[i,o]=u.useState(!1),c=x(),{isApiKeySubmitted:g}=T(),h=async()=>{if(!g)s(!0);else if(r==="dns_volume")c("/mssp-selection");else if(r==="insight_active_users"){o(!0);const l=await b();o(!1),l.success||console.error(l.error)}},v=l=>{s(!1),l&&r==="dns_volume"&&c("/mssp-selection")};return e.jsxs("div",{className:a.BillingReport,children:[e.jsx(R,{}),e.jsxs("div",{className:a.alignment,children:[e.jsx(j,{children:e.jsx(d,{handleContinueClick:h,selectedReportType:r,setSelectedReportType:n})}),i&&e.jsx(w,{})]}),e.jsx(I,{}),e.jsx(C,{isOpen:t,onClose:()=>s(!1),onSuccess:v})]})}const d=({handleContinueClick:t,selectedReportType:s,setSelectedReportType:r})=>e.jsxs("section",{className:a.billingReportIntro,children:[e.jsx("h1",{children:"Billing Reports"}),e.jsx("p",{children:"Welcome to the Billing Report feature. Here you can generate a DNS volume report or an INSIGHT total active users report."}),e.jsxs("p",{children:["The DNS volume report will always run for the previous month, regardless of what date you run the report.",e.jsx("br",{}),"The INSIGHT total active users report will run for the day in which the report is generated."]}),e.jsxs("div",{className:a.reportTypeSelection,children:[e.jsx("div",{children:e.jsxs("label",{children:[e.jsx("input",{type:"radio",name:"reportType",value:"dns_volume",checked:s==="dns_volume",onChange:()=>r("dns_volume")}),"DNS Volume Report"]})}),e.jsx("div",{children:e.jsxs("label",{children:[e.jsx("input",{type:"radio",name:"reportType",value:"insight_active_users",checked:s==="insight_active_users",onChange:()=>r("insight_active_users")}),"Insight Active Users Report"]})})]}),e.jsx("div",{className:a.continueBtnContainer,children:e.jsx(A,{theme:"light",onClick:t,ariaLabel:"Proceed to report generation",children:"Continue"})})]});d.propTypes={handleContinueClick:p.func.isRequired,selectedReportType:p.string.isRequired,setSelectedReportType:p.func.isRequired};export{$ as default};
