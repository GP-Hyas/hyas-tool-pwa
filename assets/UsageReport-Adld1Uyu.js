import{d as m,g as f,a as _,b as S,A as y,r as u,u as j,j as e,H as x,D as R,F as I,P as p}from"./index-CfPsnKVx.js";import{u as T,M as U}from"./Modal-FhpXIHNw.js";import{S as C,B as A}from"./Button-Ch3ZrIWa.js";import{g as N}from"./reportService-DInPUmLM.js";const w=async(t,s)=>{try{const r=_(t.client_id),o=(await S.post(y.analyticsTeams,r,{headers:s})).data;return typeof o.total_active_users>"u"?(console.warn(`Unexpected response format for ${t.organization_name}`),{activeUsers:0}):{activeUsers:o.total_active_users}}catch(r){return console.error(`Error fetching insight seats for ${t.organization_name}:`,r),{activeUsers:0}}},b=async()=>{try{const s=(await m.getOrganizationList()).filter(c=>c.products.includes("INSIGHT"));if(!Array.isArray(s)||s.length===0)return{success:!1,data:null,error:"No INSIGHT organizations available."};const r=await f(),n=await H(s,r),o=P(n),a=N(o,"insight_active_users");return{success:a.success,error:a.error}}catch(t){return console.error(`Error fetching INSIGHT active users: ${t}`),{success:!1,error:`Error fetching INSIGHT active users: ${t.message}`}}},H=async(t,s)=>await Promise.all(t.map(async n=>{const{activeUsers:o}=await w(n,s);return{org:n.organization_name,activeUsers:o}})),P=t=>{const s=[];s.push({MSSP:"INSIGHT","Client Org":"","Total Active Users":""}),t.forEach(n=>{s.push({MSSP:"","Client Org":n.org,"Total Active Users":n.activeUsers})});const r=t.reduce((n,o)=>n+o.activeUsers,0);return s.push({MSSP:"Totals","Client Org":"","Total Active Users":r}),s},G="_UsageReport_4jtsb_2",M="_usageReportIntro_4jtsb_8",L="_alignment_4jtsb_23",O="_reportTypeSelection_4jtsb_40",B="_continueBtnContainer_4jtsb_50",i={UsageReport:G,usageReportIntro:M,alignment:L,reportTypeSelection:O,continueBtnContainer:B};function $(){const[t,s]=u.useState(!1),[r,n]=u.useState("dns_volume"),[o,a]=u.useState(!1),c=j(),{isApiKeySubmitted:g}=T(),h=async()=>{if(!g)s(!0);else if(r==="dns_volume")c("/mssp-selection");else if(r==="insight_active_users"){a(!0);const l=await b();a(!1),l.success||console.error(l.error)}},v=l=>{s(!1),l&&r==="dns_volume"&&c("/mssp-selection")};return e.jsxs("div",{className:i.UsageReport,children:[e.jsx(x,{}),e.jsxs("div",{className:i.alignment,children:[e.jsx(R,{children:e.jsx(d,{handleContinueClick:h,selectedReportType:r,setSelectedReportType:n})}),o&&e.jsx(C,{})]}),e.jsx(I,{}),e.jsx(U,{isOpen:t,onClose:()=>s(!1),onSuccess:v})]})}const d=({handleContinueClick:t,selectedReportType:s,setSelectedReportType:r})=>e.jsxs("section",{className:i.usageReportIntro,children:[e.jsx("h1",{children:"Usage Reports"}),e.jsx("p",{children:"Welcome to the Usage Report feature. Here you can generate a DNS volume report or an INSIGHT total active users report."}),e.jsxs("p",{children:["The DNS volume report will always run for the previous month, regardless of what date you run the report.",e.jsx("br",{}),"The INSIGHT total active users report will run for the day in which the report is generated."]}),e.jsxs("div",{className:i.reportTypeSelection,children:[e.jsx("div",{children:e.jsxs("label",{children:[e.jsx("input",{type:"radio",name:"reportType",value:"dns_volume",checked:s==="dns_volume",onChange:()=>r("dns_volume")}),"DNS Volume Report"]})}),e.jsx("div",{children:e.jsxs("label",{children:[e.jsx("input",{type:"radio",name:"reportType",value:"insight_active_users",checked:s==="insight_active_users",onChange:()=>r("insight_active_users")}),"INSIGHT Active Users Report"]})})]}),e.jsx("div",{className:i.continueBtnContainer,children:e.jsx(A,{theme:"light",onClick:t,ariaLabel:"Proceed to report generation",children:"Continue"})})]});d.propTypes={handleContinueClick:p.func.isRequired,selectedReportType:p.string.isRequired,setSelectedReportType:p.func.isRequired};export{$ as default};
